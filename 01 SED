SED
------
options:
----------
-n = suppressing console output (mostly used as dry-run),
-i = inplace editing (used as commit),
-E = regular expressions (regex BRE)

address and script commands:
---------------
^ = begining of the line
$ = end of line, 
p = for print ( p = print script command) 
s = for substitute ?
$a = append ($ = address, a = script command)
$d = delete ($ = address, d = script command)
i = insert (different from -i) before a line ex: 1i

Synopsis:
----------
sed [OPTION]... {script-only-if-no-other-script} [input-file]...

script examples: 
sed -n '1,$p' /etc/services = will pring from line one till end by supressing the console output
sed -n '/ssh/p' /etc/services
sed -n '1,/ssh/p' /root/.bashrc
sed -n '1,$p' /etc/services |nl -ba = prints line 1 to end and counts number of lines 

dry run append:
sed -n '2i 8.8.8.8 \tgoogle.com' hosts.backup #insert the following before line 2.
sed -n '$a 8.8.8.8 google' /etc/hosts

commit append:
sed -i '$a 8.8.8.8 google' /etc/hosts

delete end of line:
sed -i '$d' /etc/hosts


check
sed -n '1,$p' /etc/hosts 

Substitution
------------
[sed@webserver01 ~]$ grep -n '' cript.sh
1:rm sshd_config.bk
2:sudo cp /etc/ssh/sshd_config .
3:sudo chown sed:sed sshd_config.bk
4:123
5:ls
[sed@webserver01 ~]$ sed -n 's/rm sshd_config.bk/rm -rf sshd_config.bk/p' cript.sh
rm -rf sshd_config.bk
[sed@webserver01 ~]$

#to make changes use -i without the p or else it will print double lines of same
[sed@webserver01 ~]$ sed -i 's/rm sshd_config.bk/rm -rf sshd_config.bk/' cript.sh
[sed@webserver01 ~]$ grep -n '' cript.sh
1:rm -rf sshd_config.bk
2:sudo cp /etc/ssh/sshd_config .
3:sudo chown sed:sed sshd_config.bk
4:123
5:ls
[sed@webserver01 ~]$

### to change only second line 
sed -n '2s/oldtext/newtext/p' filename

### substitution on line number 5 without using -n supressing output
[sed@webserver01 ~]$ sed '5s/sudo chmod ugo+rwx sshd_config.bk/sudo chmod ugo+rw sshd_config.bk/' cript.sh
rm -rf sshd_config.bk
sudo cp /etc/ssh/sshd_config .
mv sshd_config sshd_config.bk
sudo chown sed:sed sshd_config.bk .
sudo chmod ugo+rw sshd_config.bk
ls
[sed@webserver01 ~]$ grep -n '' cript.sh
1:rm -rf sshd_config.bk
2:sudo cp /etc/ssh/sshd_config .
3:mv sshd_config sshd_config.bk
4:sudo chown sed:sed sshd_config.bk .
5:sudo chmod ugo+rwx sshd_config.bk
6:ls
### making commit with in-line editing
[sed@webserver01 ~]$ sed -i '5s/sudo chmod ugo+rwx sshd_config.bk/sudo chmod ugo+rw sshd_config.bk/' cript.sh
[sed@webserver01 ~]$ grep -n '' cript.sh
1:rm -rf sshd_config.bk
2:sudo cp /etc/ssh/sshd_config .
3:mv sshd_config sshd_config.bk
4:sudo chown sed:sed sshd_config.bk .
5:sudo chmod ugo+rw sshd_config.bk
6:ls
[sed@webserver01 ~]$

### grey or gray to blue any where 
[sed@webserver01 ~]$ grep -n '' grblu.txt
1:grey
[sed@webserver01 ~]$ sed -E 's/gr[ae]y/blue/' grblu.txt
blue
[sed@webserver01 ~]$ grep -n '' grblu.txt
1:grey
[sed@webserver01 ~]$ sed -Ei 's/gr[ae]y/blue/' grblu.txt
[sed@webserver01 ~]$ grep -n '' grblu.txt
1:blue
[sed@webserver01 ~]$
[sed@webserver01 ~]$ grep -n '' grblu.txt
1:grey
2:gray
3:graey
4:greay
5:red
[sed@webserver01 ~]$ sed -Ei 's/gr[ae]y/blue/' grblu.txt
[sed@webserver01 ~]$ grep -n '' grblu.txt
1:blue
2:blue
3:graey
4:greay
5:red
[sed@webserver01 ~]$

[sed@webserver01 ~]$ sed -E 's/gr[ae].*y/blue/' grblu.txt
blue
blue
blue
blue
red
[sed@webserver01 ~]$

##############troulbe shoot################
âœ… The fix: Use a different delimiter in s///

You can use |, #, : or other characters instead of /:
[sed@webserver01 ~]$ sed 's/sudo cp sed-and-awk ./sudo cp /root/sed-and-awk ./' cript.sh
sed: -e expression #1, char 34: unknown option to `s'
[sed@webserver01 ~]$ sed 's|sudo cp sed-and-awk .|sudo cp /root/sed-and-awk .|' cript.sh
sudo cp /root/sed-and-awk .
sudo chmod ugo+rw sed-and-awk
sudo chown sed:sed sed-and-awk
ll
[sed@webserver01 ~]$
