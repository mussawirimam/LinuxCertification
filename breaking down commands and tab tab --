man ls 
...
LS(1)                                                                 User Commands                                                                LS(1)

NAME
       ls - list directory contents

SYNOPSIS
       ls [OPTION]... [FILE]...

DESCRIPTION
       List information about the FILEs (the current directory by default).  Sort entries alphabetically if none of -cftuvSUX nor --sort is specified.

       Mandatory arguments to long options are mandatory for short options too.

       -a, --all
              do not ignore entries starting with .
...


### what are the difference between the command, option, and flag?
Key Differences:
Command: The primary instruction or program you're executing (e.g., kubectl, df).
Option: A broader category for parameters that modify the command's behavior, often with an argument (e.g., --namespace, --output).
Flag: A specific type of option, usually a single character or shorthand, that often toggles a feature (e.g., -h for human-readable output, -v for verbose output).
kubectl

kubectl get pods --namespace=my-namespace
Here, --namespace is the option, and my-namespace is its argument.

kubectl get pods -o wide
Here, -o is a flag that specifies the output format, and wide is its argument.

### what is then get pods? it is a sub command and pod is an argument
get pods is actually a subcommand, not an option or a flag. Here's a breakdown:

kubectl: This is the main command (the Kubernetes command-line tool).
get: This is a subcommand of kubectl that tells Kubernetes to retrieve (get) information.
pods: This is an argument passed to the get subcommand that specifies which resource you want to retrieve— in this case, "pods."

Summary:
Command: The main program you're running.
Option: Modifies the behavior of the command, and often comes with an argument.
Flag: A specific type of option that often acts as a boolean toggle (usually short and without an argument).

SUMMARY:
Command: kubectl
Subcommand: get
Argument: pods
Option: --namespace=my-namespace
Flag: -o wide


### what is the difference between the options and flags
The main difference between options and flags lies in how they modify the behavior of a command and whether they require arguments.

1. Option
Definition: Options modify the behavior of a command and usually require an argument (a value or parameter).
e.g kubectl get pods --namespace=my-namespace
--namespace is an option, and my-namespace is its argument.
Options can be long (e.g., --namespace) and typically specify values or settings for the command.

2. Flag
Definition: Flags are a specific type of option that typically do not require arguments. They usually toggle a feature or setting.
e.g. kubectl get pods -o wide
-o is a flag that specifies the output format (in this case, wide).
Flags are often short (e.g., -o) and act as switches (on/off) for the command.

Key Differences:
Argument Requirement:
Options often require an argument (e.g., --namespace=my-namespace).
Flags usually don’t require an argument (e.g., -o wide).
Length:
Options tend to have longer names (e.g., --namespace).
Flags tend to be short (e.g., -v, -h).


### if you press a command and do tab it will give you more commands
root@master:~/app# ls<tab><tab>
ls           lsblk        lscpu        lsinitramfs  lslocks      lsmem        lsns         lspci        lspgpot      lsusb
lsattr       lsb_release  lshw         lsipc        lslogins     lsmod        lsof         lspcmcia     lspower
root@master:~/app# ls

### if you press a command and do tab and add --, it will give you more options 
root@master:~/app# ls --<tab><tab>
--all                                      --full-time                                --quoting-style=
--almost-all                               --group-directories-first                  --recursive
--author                                   --help                                     --reverse
--block-size=                              --hide=                                    --show-control-chars
--classify                                 --hide-control-chars                       --si
--color                                    --human-readable                           --size
--color=                                   --hyperlink                                --sort
--context                                  --ignore=                                  --sort=
--dereference                              --ignore-backups                           --tabsize=
--dereference-command-line                 --indicator-style=                         --time
--dereference-command-line-symlink-to-dir  --inode                                    --time=
--directory                                --kibibytes                                --time-style=
--dired                                    --literal                                  --version
--escape                                   --no-group                                 --width=
--file-type                                --numeric-uid-gid                          --zero
--format=                                  --quote-name
root@master:~/app# ls --

### if you press a command if it is not showing you the next commands, you can simple type that command and it will show you more option for the commands and options
### I just typed kubeadm and the rest 
root@master:~/app# kubeadm


    ┌──────────────────────────────────────────────────────────┐
    │ KUBEADM                                                  │
    │ Easily bootstrap a secure Kubernetes cluster             │
    │                                                          │
    │ Please give us feedback at:                              │
    │ https://github.com/kubernetes/kubeadm/issues             │
    └──────────────────────────────────────────────────────────┘

Example usage:

    Create a two-machine cluster with one control-plane node
    (which controls the cluster), and one worker node
    (where your workloads, like Pods and Deployments run).

    ┌──────────────────────────────────────────────────────────┐
    │ On the first machine:                                    │
    ├──────────────────────────────────────────────────────────┤
    │ control-plane# kubeadm init                              │
    └──────────────────────────────────────────────────────────┘

    ┌──────────────────────────────────────────────────────────┐
    │ On the second machine:                                   │
    ├──────────────────────────────────────────────────────────┤
    │ worker# kubeadm join <arguments-returned-from-init>      │
    └──────────────────────────────────────────────────────────┘

    You can then repeat the second step on as many other machines as you like.

Usage:
  kubeadm [command]

Available Commands:
  certs       Commands related to handling kubernetes certificates
  completion  Output shell completion code for the specified shell (bash or zsh)
  config      Manage configuration for a kubeadm cluster persisted in a ConfigMap in the cluster
  help        Help about any command
  init        Run this command in order to set up the Kubernetes control plane
  join        Run this on any machine you wish to join an existing cluster
  kubeconfig  Kubeconfig file utilities
  reset       Performs a best effort revert of changes made to this host by 'kubeadm init' or 'kubeadm join'
  token       Manage bootstrap tokens
  upgrade     Upgrade your cluster smoothly to a newer version with this command
  version     Print the version of kubeadm

Flags:
      --add-dir-header           If true, adds the file directory to the header of the log messages
  -h, --help                     help for kubeadm
      --log-file string          If non-empty, use this log file (no effect when -logtostderr=true)
      --log-file-max-size uint   Defines the maximum size a log file can grow to (no effect when -logtostderr=true). Unit is megabytes. If the value is 0, the maximum file size is unlimited. (default 1800)
      --one-output               If true, only write logs to their native severity level (vs also writing to each lower severity level; no effect when -logtostderr=true)
      --rootfs string            [EXPERIMENTAL] The path to the 'real' host root filesystem.
      --skip-headers             If true, avoid header prefixes in the log messages
      --skip-log-headers         If true, avoid headers when opening log files (no effect when -logtostderr=true)
  -v, --v Level                  number for the log level verbosity

Additional help topics:
  kubeadm alpha      Kubeadm experimental sub-commands

Use "kubeadm [command] --help" for more information about a command.
root@master:~/app#
